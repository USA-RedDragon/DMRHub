name: Tests

on:
  pull_request:
  push:

jobs:
  frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - run: make build-frontend

      - uses: actions/upload-artifact@v3
        with:
          name: frontend
          path: internal/http/frontend/dist
          if-no-files-found: error
          retention-days: 1

  frontend-unit-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - run: cd internal/http/frontend && npm ci

      - run: make frontend-unit-test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: frontend-unit-test-report
          if-no-files-found: error
          retention-days: 30
          path: internal/http/frontend/reports/unit

      - name: Publish Test Report
        if: always()
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: "internal/http/frontend/reports/unit/*.xml"
          test_files_prefix: "internal/http/frontend"
          require_tests: true
          check_retries: true
          detailed_summary: true
          fail_on_failure: true
          token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Frontend Unit Tests

      - uses: codecov/codecov-action@v3
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: frontend-unit
          files: ./coverage/unit/lcov.info
          fail_ci_if_error: true
          working-directory: ./internal/http/frontend

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: frontend-unit-coverage
          path: internal/http/frontend/coverage/unit
          if-no-files-found: error
          retention-days: 30

  frontend-e2e-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write

    strategy:
      fail-fast: false
      matrix:
        browser: ["firefox", "chrome", "electron"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - run: cd internal/http/frontend && npm ci

      - run: make frontend-e2e-test-${{ matrix.browser }}

      - uses: codecov/codecov-action@v3
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: frontend-e2e-${{ matrix.browser }}
          files: ./coverage/e2e/lcov.info
          fail_ci_if_error: true
          working-directory: ./internal/http/frontend

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: frontend-e2e-coverage-${{ matrix.browser }}
          path: internal/http/frontend/coverage/e2e
          if-no-files-found: error
          retention-days: 30

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: frontend-e2e-test-report-${{ matrix.browser }}
          if-no-files-found: error
          retention-days: 30
          path: internal/http/frontend/reports/e2e

      - name: Publish Test Report
        if: always()
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: "internal/http/frontend/reports/e2e/*.xml"
          test_files_prefix: "internal/http/frontend"
          require_tests: true
          check_retries: true
          detailed_summary: true
          fail_on_failure: true
          token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Frontend E2E Tests (${{ matrix.browser }})

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: frontend-e2e-screenshots-${{ matrix.browser }}
          path: internal/http/frontend/cypress/screenshots
          if-no-files-found: ignore
          retention-days: 30

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: frontend-e2e-videos-${{ matrix.browser }}
          path: internal/http/frontend/cypress/videos
          if-no-files-found: ignore
          retention-days: 30

  backend-tests:
    runs-on: ubuntu-latest
    needs: frontend
    permissions:
      contents: read
      checks: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod

      - name: Copy built frontend
        uses: actions/download-artifact@v3
        with:
          name: frontend
          path: internal/http/frontend/dist

      - run: make build
      - uses: Jerome1337/gofmt-action@v1.0.5
        with:
          gofmt-flags: "-l -d"

      - run: make benchmark

      - name: Race tests
        if: always()
        run: |
          go test ./... -race

      - name: Unit tests
        if: always()
        run: |
          go install github.com/jstemmer/go-junit-report/v2@latest
          env CGO_ENABLED=0 go test ./... -coverprofile coverage.out -coverpkg=./... -covermode atomic 2>&1 > out.txt || true
          cat out.txt | go-junit-report -out report.xml -iocopy

      - name: Unit tests reporting
        if: always()
        run: |
          go install github.com/vakenbolt/go-test-report@latest
          env CGO_ENABLED=0 go test ./... -json 2>&1 > out.txt || true
          cat out.txt | go-test-report -o report.html >/dev/null

      - name: Publish Test Report
        if: always()
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: "report.xml"
          check_retries: true
          detailed_summary: true
          fail_on_failure: true
          token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Backend Unit Tests

      - uses: codecov/codecov-action@v3
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: backend
          fail_ci_if_error: true

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: backend-coverage
          path: coverage.out
          if-no-files-found: error
          retention-days: 30

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: backend-test-report
          path: report.xml
          if-no-files-found: error
          retention-days: 30

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: backend-test-report
          path: report.html
          if-no-files-found: error
          retention-days: 30
