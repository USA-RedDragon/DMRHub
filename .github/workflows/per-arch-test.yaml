name: Per-architecture test

on:
  pull_request:
  push:

jobs:
  frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: make build-frontend

      - uses: actions/upload-artifact@v3
        with:
          name: frontend
          path: internal/http/frontend/dist
          if-no-files-found: error
          retention-days: 1

  test:
    name: Test
    needs: frontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [openbsd, netbsd, freebsd, linux, windows, darwin]
        goarch: ["386", arm, amd64, arm64, riscv64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
          - goarch: arm
            goos: windows
          - goarch: riscv
            goos: windows
          - goarch: riscv64
            goos: windows
          - goarch: arm
            goos: darwin
          - goarch: riscv64
            goos: darwin
          - goarch: riscv64
            goos: openbsd
          - goarch: riscv64
            goos: netbsd
    steps:
      - uses: actions/checkout@v3
      - name: Copy built frontend
        uses: actions/download-artifact@v3
        with:
          name: frontend
          path: internal/http/frontend/dist

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      - run: docker run --privileged --rm tonistiigi/binfmt --install all

      - run: go install github.com/tinylib/msgp

      - run: make build-ci && make test
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
