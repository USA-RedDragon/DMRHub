name: Docker

on:
  pull_request:
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  ghcr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        if: github.event_name == 'push'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64,arm

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        if: github.event_name != 'push'
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Extract metadata (tags, labels) for Docker
        id: metarelease
        if: github.event_name == 'push'
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix=sha-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Wait for frontend artifact
        uses: lewagon/wait-on-check-action@v1.2.0
        with:
          ref: ${{ github.ref }}
          check-name: "Frontend"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

      - name: Copy built frontend
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: frontend.yaml
          workflow_conclusion: success
          name: frontend
          path: internal/http/frontend/dist

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        if: github.event_name == 'pull_request'
        with:
          context: .
          platforms: linux/amd64
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: IS_CI=true

      - name: Install Cosign
        if: github.event_name == 'push'
        uses: sigstore/cosign-installer@main

      - name: Store Cosign private key in a file
        if: github.event_name == 'push'
        run: 'echo "$COSIGN_KEY" > /tmp/cosign.key'
        shell: bash
        env:
          COSIGN_KEY: ${{secrets.COSIGN_KEY}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        if: github.event_name == 'push'
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          push: true
          tags: ${{ steps.metarelease.outputs.tags }}
          labels: ${{ steps.metarelease.outputs.labels }}
          build-args: IS_CI=true

      - name: Sign Docker Image
        if: github.event_name == 'push'
        run: cosign sign --key /tmp/cosign.key ${TAGS}
        env:
          TAGS: ${{steps.metarelease.outputs.tags}}
          COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}

  docker_hub:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64,arm

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: jamcswain/DMRHub
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix=sha-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Install Cosign
        uses: sigstore/cosign-installer@main

      - name: Store Cosign private key in a file
        run: 'echo "$COSIGN_KEY" > /tmp/cosign.key'
        shell: bash
        env:
          COSIGN_KEY: ${{secrets.COSIGN_KEY}}

      - name: Wait for frontend artifact
        uses: lewagon/wait-on-check-action@v1.2.0
        with:
          ref: ${{ github.ref }}
          check-name: "Frontend"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

      - name: Copy built frontend
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: frontend.yaml
          workflow_conclusion: success
          name: frontend
          path: internal/http/frontend/dist

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: IS_CI=true

      - name: Sign Docker Image
        run: cosign sign --key /tmp/cosign.key ${TAGS}
        env:
          TAGS: ${{steps.meta.outputs.tags}}
          COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}
