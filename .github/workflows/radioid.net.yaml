name: RadioID Database Update

on:
  workflow_dispatch:
  schedule:
    # Once a week at 00:16
    - cron: "16 0 * * */7"

jobs:
  update:
    name: Update
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Import bot's GPG key for signing commits
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.BOT_GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Install dependencies
        run: |
          sudo apt-get update 
          sudo apt-get install -y make wget xz git
      - name: Update databases
        run: |
          make update-dbs
      - name: Check Repeaterdb size
        run: |
          check=`du -s internal/repeaterdb/repeaters.json.xz | awk '{print $1}'`
          if [ "$check" -lt 250 ]
          then
          exit 2
          fi
      - name: Check Userdb size
        run: |
          check=`du -s internal/userdb/users.json.xz | awk '{print $1}'`
          if [ "$check" -lt 3700 ]
          then
          exit 2
          fi
      - name: Commit changes to databases
        run: |
          git commit --signoff -m "Automated update of RadioID.net Databases" internal/repeaterdb internal/userdb
          git push -f origin HEAD:refs/heads/automated/radioid-update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_AUTHOR_EMAIL: ${{ steps.import-gpg.outputs.email }}
          GIT_COMMITTER_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_COMMITTER_EMAIL: ${{ steps.import-gpg.outputs.email }}
      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: 'Update RadioID.net Databases',
              owner,
              repo,
              head: 'automated/radioid-update',
              base: '${{ github.ref_name }}',
              body: 'Automated update to the RadioID.net DMR users and repeaters databases'
            });
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['update', 'chore', 'automated pr']
            });
