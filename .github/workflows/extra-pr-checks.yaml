name: PR Static Checks
on: pull_request

jobs:
  frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: make build-frontend

      - uses: actions/upload-artifact@v3
        with:
          name: frontend
          path: internal/http/frontend/dist
          if-no-files-found: error
          retention-days: 1

  imports:
    name: Imports
    needs: frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Copy built frontend
        uses: actions/download-artifact@v3
        with:
          name: frontend
          path: internal/http/frontend/dist
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"
      - run: go install github.com/tinylib/msgp
      - run: go generate ./...
      - name: check
        uses: USA-RedDragon/golang-github-actions@v1.2.5
        with:
          run: imports
          token: ${{ secrets.GITHUB_TOKEN }}

  errcheck:
    name: Errcheck
    needs: frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Copy built frontend
        uses: actions/download-artifact@v3
        with:
          name: frontend
          path: internal/http/frontend/dist
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"
      - run: go install github.com/tinylib/msgp
      - run: go generate ./...
      - name: check
        uses: USA-RedDragon/golang-github-actions@v1.2.5
        with:
          run: errcheck
          token: ${{ secrets.GITHUB_TOKEN }}
          flags: "-ignoregenerated"
        env:
          GOFLAGS: "-buildvcs=false"

  shadow:
    name: Shadow
    needs: frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Copy built frontend
        uses: actions/download-artifact@v3
        with:
          name: frontend
          path: internal/http/frontend/dist
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"
      - run: go install github.com/tinylib/msgp
      - run: go generate ./...
      - name: check
        uses: USA-RedDragon/golang-github-actions@v1.2.5
        with:
          run: shadow
          token: ${{ secrets.GITHUB_TOKEN }}

  staticcheck:
    name: StaticCheck
    needs: frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Copy built frontend
        uses: actions/download-artifact@v3
        with:
          name: frontend
          path: internal/http/frontend/dist
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"
      - run: go install github.com/tinylib/msgp
      - run: go generate ./...
      - name: check
        uses: USA-RedDragon/golang-github-actions@v1.2.5
        with:
          run: staticcheck
          token: ${{ secrets.GITHUB_TOKEN }}

  sec:
    name: Sec
    needs: frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Copy built frontend
        uses: actions/download-artifact@v3
        with:
          name: frontend
          path: internal/http/frontend/dist
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"
      - run: go install github.com/tinylib/msgp
      - run: go generate ./...
      - name: check
        uses: USA-RedDragon/golang-github-actions@v1.2.5
        with:
          run: sec
          token: ${{ secrets.GITHUB_TOKEN }}
          flags: "-exclude=G104 -exclude-generated"
